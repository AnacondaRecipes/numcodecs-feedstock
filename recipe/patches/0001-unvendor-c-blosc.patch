diff --git a/setup.py b/setup.py
index f07cf8d..178179a 100644
--- a/setup.py
+++ b/setup.py
@@ -51,61 +51,21 @@ def blosc_extension():
 
     extra_compile_args = base_compile_args.copy()
     define_macros = []
-
-    # setup blosc sources
-    blosc_sources = [f for f in glob('c-blosc/blosc/*.c')
-                     if 'avx2' not in f and 'sse2' not in f]
-    include_dirs = [os.path.join('c-blosc', 'blosc')]
-
-    # add internal complibs
-    blosc_sources += glob('c-blosc/internal-complibs/lz4*/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/snappy*/*.cc')
-    blosc_sources += glob('c-blosc/internal-complibs/zlib*/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/common/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/compress/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/decompress/*.c')
-    blosc_sources += glob('c-blosc/internal-complibs/zstd*/dictBuilder/*.c')
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/*')
-                     if os.path.isdir(d)]
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/*/*')
-                     if os.path.isdir(d)]
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/*/*/*')
-                     if os.path.isdir(d)]
-    define_macros += [('HAVE_LZ4', 1),
-                      # ('HAVE_SNAPPY', 1),
-                      ('HAVE_ZLIB', 1),
-                      ('HAVE_ZSTD', 1)]
-    # define_macros += [('CYTHON_TRACE', '1')]
-
-    # SSE2
-    if have_sse2 and not disable_sse2:
-        info('compiling Blosc extension with SSE2 support')
-        extra_compile_args.append('-DSHUFFLE_SSE2_ENABLED')
-        blosc_sources += [f for f in glob('c-blosc/blosc/*.c') if 'sse2' in f]
-        if os.name == 'nt':
-            define_macros += [('__SSE2__', 1)]
-    else:
-        info('compiling Blosc extension without SSE2 support')
-
-    # AVX2
-    if have_avx2 and not disable_avx2:
-        info('compiling Blosc extension with AVX2 support')
-        extra_compile_args.append('-DSHUFFLE_AVX2_ENABLED')
-        blosc_sources += [f for f in glob('c-blosc/blosc/*.c') if 'avx2' in f]
-        if os.name == 'nt':
-            define_macros += [('__AVX2__', 1)]
-    else:
-        info('compiling Blosc extension without AVX2 support')
+    include_dirs = [os.path.join(sys.prefix, 'include')]
+    library_dirs = [os.path.join(sys.prefix, 'lib')]
+    libraries = ["blosc"]
 
     sources = ['numcodecs/blosc.pyx']
 
     # define extension module
     extensions = [
         Extension('numcodecs.blosc',
-                  sources=sources + blosc_sources,
+                  sources=sources,
                   include_dirs=include_dirs,
                   define_macros=define_macros,
                   extra_compile_args=extra_compile_args,
+                  library_dirs=library_dirs,
+                  libraries=libraries
                   ),
     ]
 
@@ -115,31 +75,23 @@ def blosc_extension():
 def zstd_extension():
     info('setting up Zstandard extension')
 
-    zstd_sources = []
     extra_compile_args = base_compile_args.copy()
-    include_dirs = []
     define_macros = []
-
-    # setup sources - use zstd bundled in blosc
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/common/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/compress/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/decompress/*.c')
-    zstd_sources += glob('c-blosc/internal-complibs/zstd*/dictBuilder/*.c')
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/zstd*')
-                     if os.path.isdir(d)]
-    include_dirs += [d for d in glob('c-blosc/internal-complibs/zstd*/*')
-                     if os.path.isdir(d)]
-    # define_macros += [('CYTHON_TRACE', '1')]
+    include_dirs = [os.path.join(sys.prefix, 'include')]
+    library_dirs = [os.path.join(sys.prefix, 'lib')]
+    libraries = ["zstd"]
 
     sources = ['numcodecs/zstd.pyx']
 
     # define extension module
     extensions = [
         Extension('numcodecs.zstd',
-                  sources=sources + zstd_sources,
+                  sources=sources,
                   include_dirs=include_dirs,
                   define_macros=define_macros,
                   extra_compile_args=extra_compile_args,
+                  library_dirs=library_dirs,
+                  libraries=libraries
                   ),
     ]
 
@@ -151,22 +103,21 @@ def lz4_extension():
 
     extra_compile_args = base_compile_args.copy()
     define_macros = []
-
-    # setup sources - use LZ4 bundled in blosc
-    lz4_sources = glob('c-blosc/internal-complibs/lz4*/*.c')
-    include_dirs = [d for d in glob('c-blosc/internal-complibs/lz4*') if os.path.isdir(d)]
-    include_dirs += ['numcodecs']
-    # define_macros += [('CYTHON_TRACE', '1')]
+    include_dirs = [os.path.join(sys.prefix, 'include')]
+    library_dirs = [os.path.join(sys.prefix, 'lib')]
+    libraries = ["lz4"]
 
     sources = ['numcodecs/lz4.pyx']
 
     # define extension module
     extensions = [
         Extension('numcodecs.lz4',
-                  sources=sources + lz4_sources,
+                  sources=sources,
                   include_dirs=include_dirs,
                   define_macros=define_macros,
                   extra_compile_args=extra_compile_args,
+                  library_dirs=library_dirs,
+                  libraries=libraries
                   ),
     ]
 
